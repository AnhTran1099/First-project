package com.training.common.util;

import java.io.IOException;
import java.io.InputStream;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Locale;
import java.util.Properties;

import org.hibernate.annotations.common.util.impl.LoggerFactory;
import org.jboss.logging.Logger;

import com.fasterxml.jackson.core.format.InputAccessor;

import antlr.StringUtils;

public class CommonUtil {
	
	private static final Logger LOGGER = LoggerFactory.logger(CommonUtil.class);
	
	public static String cvDateToString(Date inputDate, String dateFormat){
		String outputDate = StringUtils.EMPTY;
		if (inputDate != null) {
			SimpleDateFormat dateFormatOutput = new SimpleDateFormat(dateFormat);
			outputDate = dateFormatOutput.format(inputDate);
		}
	return outputDate;
	}
	
	public static String cvDateToString(Date inputDate, String dateFormat, Locale locale) {
		String outputDate = StringUtils.EMPTY;
		if (inputDate != null) {
			SimpleDateFormat dateFormatOutput = new SimpleDateFormat(dateFormat, locale);
			outputDate = dateFormatOutput.format(inputDate);
		}
	return outputDate;
	}
	
	public static Date cvStringToDate(String dateStr, String dateFormat) {
		Date outputDate = null;
		SimpleDateFormat simpleDateFormat = new SimpleDateFormat(dateFormat);
		try {
			outputDate = (Date) simpleDateFormat.parse(dateStr);
		} catch (ParseException e) {
			LOGGER.error("Error when converting data: " + e.getMessage());
		}
		return outputDate;
	}
	
	public static String readProperties(String key, String fileName){
		
		InputStream inputStream = CommonUtil.class.getClassLoader().getResourceAsStream(fileName);
		Properties properties = new Properties();
		try {
			properties.load(inputStream);
			return properties.getProperty(key);
		}catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}
}
